name: Update Documentation

on:
    workflow_dispatch:
          inputs:
              currentCommit:
                  description: "Commit to compare from"
                  required: false
                  default: "HEAD~1"
              newCommit:
                  description: "Commit to compare to"
                  required: false
                  default: "HEAD"
              branch_name:
                  description: "Commit hash to compare to (default: HEAD)"
                  required: false
                  default: ""

    push:
        branches:
            - main
        paths:
        - 'src/**'

jobs:
    update-docs:
        runs-on: ubuntu-latest
        steps: 
            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            
            - name: Configure Git for GitHub Actions
              run: |
                git config --global user.name "github-actions[bot]"
                git config --global user.email "github-actions[bot]@users.noreply.github.com"
                git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

            - name: Install Python
              uses: actions/setup-python@v3
              with:
                python-version: "3.9"
                cache: 'pip' # caching pip dependencies
            
            - name: Install dependencies
              run: pip install -r requirements.txt #Install dependencies

            - name: Install ollama
              run: curl -fsSL https://ollama.com/install.sh | sh

            - name: Pull ollama model
              run: ollama pull llama3.2

            - name: Determine Commits #if the inputs are empty use HEAD~1 and HEAD
              id: commits
              run: |
                CURRENT_COMMIT="${{ github.event.inputs.currentCommit }}"
                NEW_COMMIT="${{ github.event.inputs.newCommit }}"
                BRANCH_NAME="${{ github.event.inputs.branch_name }}"

                echo "Using commits: $CURRENT_COMMIT -> $NEW_COMMIT, on branch $BRANCH_NAME"
                echo "CURRENT_COMMIT=$CURRENT_COMMIT" >> $GITHUB_ENV
                echo "NEW_COMMIT=$NEW_COMMIT" >> $GITHUB_ENV
                echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
                    
            - name: Run agent
              run: python agent.py "$CURRENT_COMMIT" "$NEW_COMMIT" "$BRANCH_NAME"

            - name: Commit and Push Changes (test-mode, if not on the main-branch)
              if: github.ref != 'refs/heads/main'
              run: |
                git add .
                git commit -m "Auto-update documentation"
                git push origin HEAD

            - name: Create pull request (only if running on main)
              if: github.ref == 'refs/heads/main'
              run: gh pr create -B main -H $BRANCH_NAME --fill-first
              env:
                GH_TOKEN: ${{ github.token }}
              
